scripts

#!/bin/bash
#
#
#check whether the file exist or not

if [[ -f "$1" ]]; then
        echo "$1 -exists"
else
        echo "$1 -not exists"
fi


****$#*****#***

#!/bin/bash

if [[ -e "$1" ]]; then
        echo "$1 exists"
else
        echo "$1 not exists"
fi

if [[ -f "$1" ]]; then
        echo "$1 if file"
fi

if [[ -d "$1" ]]; then
        echo "$1 is directory"
fi

*****#*****#**

#!/bin/bash 

#reading data from the user 
read -p 'Enter file name : ' FileName 

if [ -e $FileName ] 
then 
	echo File Exist 
else
	echo File doesnot exist 
fi 

if [ -s $FileName ] 
then 
	echo The given file is not empty. 
else
	echo The given file is empty. 
fi 

if [ -r $FileName ] 
then 
	echo The given file has read access. 
else
	echo The given file does not has read access. 
fi 

if [ -w $FileName ] 
then 
	echo The given file has write access. 
else
	echo The given file does not has write access. 
fi 

if [ -x $FileName ] 
then 
	echo The given file has execute access. 
else
	echo The given file does not has execute access. 
fi 

********#****
To check whether $1 is a file or directory
#!/bin/bash
#
#
#check whether the file exist or not

if ! [[ -e "$1" ]]; then 
        echo "no such files or directory"
        exit1
fi
if [[ -f "$1" ]]; then
        echo "$1 -is a file"

fi

if [[ -d "$1" ]]; then 
        echo "$1 is a directory"

fi
***#*****#****

if condition
#!/bin/bash

#to check whether the given numer less or greter than $1
if [[$1 -lt 10]]; then
	echo"$1 -is < 10"
fi

if [[$1 -gt 10]]; then
	echo"$1 -is > 10"
fi

*****#*****#****
#!/bin/bash
#check value if less than or greater than

if [[ $1 -lt 10 ]]; then
        echo "$1 is less than 10"
elif [[ $1 -eq 10 ]]; then
        echo "$1 is equal t 10"
elif [[ $1 -ge 10 ]]; then
        echo "$1 is greater than equal to 10"
else
        echo "$1 is greater than 10"
fi

*******#*******#****

#!/bin/bash

#scripts using && ||

if [[ $1 == 'harsha' ]] && [[ $2 == 'yadav' ]];  then
        echo "welcome $1 $2"
else
        echo "authentication not found"
fi

****#*****#**

if [[ $1 == 'harsha' ]] || [[ $2 == 'yadav' ]]; then
        echo "welcome to amazon"
else
        echo "authentication not found"
fi

*****#*****#****

#!/bin/bash

output=$(date)

if [[ -z $output ]]; then
        echo "output is empty"
fi

if [[ -n $output ]]; then
        echo "output is something"
fi


*******#******#****

#!/bin/bash

http_code= $(curl -s -o /dev/null -w "%{http-code}" $1)

if [[ $http_code -eq 200 ]]; then
        echo "success: $1 is up and running"
else
        echo "error: $1 is not running"
fi



*****$#******#*********$#******#****
#!/bin/bash

#Bash Script to check whether a number is even or odd
read -p "Enter a number: " number
if [ $((number%2)) -eq 0 ]
then
  echo "Number is even."
else
  echo "Number is odd."
fi
~   
*****$#******#****

#!/bin/bash

str="$1"
reversed_string=" "
len=${#str}
for (( i=$len-1; i>=0; i-- ))
do
reversed_string="$reversed_string ${str:$i:1}"
done
echo "$reversed_string"


***#*****#**
#!/bin/bash
sum=0
for (( i=0; i<=10; i++ ))
do
        sum=$((sum+i))
done
echo "$sum"
~                                                  

***#*****#*#*

Program 2: We are going to use “for” loop to iterate through a list. We will also use “break” keyword.

echo "Enter a number: "
read n

# Finding the number ‘n’ with the help of the 'for' loop.
For i in 10 9 8 7 6 5 4 3 2 1
do
if[ $i -eq $n ]; then
echo “$n found!”
break
fi
echo “$i”
done                                                                                                                      
~ ****#***#***#**#*
to print n natural even number using while loop

i=0
while [ $i -le 10 ]
do
        rem=$(( $i%2 ))
        if [[ $rem -eq 0 ]]; then

        echo "$i"
        fi
        i=$(($i+1))
done
***#*****#****#**#
TO print sum of n natural even number using while loop

sum=0
i=0
while [ $i -le 10 ]
do
        rem=$(( $i%2 ))
        if [[ $rem -eq 0 ]]; then

                sum=$(($sum+$i))
        fi
        i=$(($i+1))
done
echo "$sum"
****#**$**#**##*
to print sum of n natural even number using for loop

sum=0
for (( i=1; i<=10; i++ ))
do
        if [ $((i%2)) -eq 0 ]; then

                sum=$(($sum+$i))
        fi
done
echo "$sum"                                                                                                                                                                       